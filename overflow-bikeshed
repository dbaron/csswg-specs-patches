From: L. David Baron <dbaron@dbaron.org>

[css-overflow] Convert css-overflow to bikeshed preprocessor.

diff --git a/css-overflow/Overview.src.html b/css-overflow/Overview.src.html
--- a/css-overflow/Overview.src.html
+++ b/css-overflow/Overview.src.html
@@ -1,18 +1,33 @@
-<!DOCTYPE html>
-<html lang="en">
-<head>
-  <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
-  <title>CSS Overflow Module Level 3</title>
-  <link rel=contents href="#contents">
-  <link rel=index href="#index">
-  <link rel="stylesheet" type="text/css" href="../default.css">
-  <link rel="stylesheet" type="text/css"
-        href="http://www.w3.org/StyleSheets/TR/W3C-[STATUS].css">
+<h1>CSS Overflow Module Level 3</h1>
+<pre class="metadata">
+Status: ED
+ED: http://dev.w3.org/csswg/css-overflow/
+Shortname: css-overflow
+Group: csswg
+Level: 1
+TR: http://www.w3.org/TR/css-overflow-3/
+Previous version: http://www.w3.org/TR/2013/WD-css-overflow-3-20130418/
+Editor: L. David Baron, Mozilla, http://dbaron.org/
+Abstract: This module contains the features of CSS relating to new mechanisms of overflow handling in visual media (e.g., screen or paper).  In interactive media, it describes features that allow the overflow from a fixed size container to be handled by pagination (displaying one page at a time).  It also describes features, applying to all visual media, that allow the contents of an element to be spread across multiple fragments, allowing the contents to flow across multiple regions or to have different styles for different fragments.
+Status Text: The following features are at risk: &hellip;
+!Change Log: <a href="https://dvcs.w3.org/hg/csswg/log/tip/css-overflow/Overview.src.html">from 27 January 2015 to the present</a>
+!Change Log: <a href="https://dvcs.w3.org/hg/csswg/log/tip/css-overflow/Overview.src.html">from 28 March 2013 to 27 January 2015</a>
+!Change Log: <a href="https://dvcs.w3.org/hg/csswg/log/tip/css3-overflow/Overview.src.html">from 31 July 2012to 27 March 2013</a>
+</pre>
+<pre class="link-defaults">
+spec:css-transforms-1; type:property; text:transform-style
+</pre>
+<pre class="anchors">
+url: http://www.w3.org/TR/2008/CR-css3-marquee-20081205/#the-overflow-style; type: property; text: overflow-style;
+url: http://dev.w3.org/csswg/css-break/#breaking-controls; type: property; text: break-*;
+url: http://dev.w3.org/csswg/css-multicol/#overflow-columns; type: dfn; text: overflow columns;
+url: http://dev.w3.org/csswg/selectors-3/#subject; type: dfn; text: subject;
+</pre>
 	<style>
 		table.source-demo-pair {
 			width: 100%;
 		}
 
 		.in-cards-demo {
 			width: 13em;
 			height: 8em;
@@ -101,96 +116,20 @@
 			width: 11.5em;
 			float: left; margin-right: 1em;
 		}
 		.article-max-lines-demo.three {
 			width: 11.5em;
 			float: left;
 		}
 	</style>
-</head>
-
-<div class="head">
-<!--logo-->
-
-<h1>CSS Overflow Module Level 3</h1>
-
-<h2 class="no-num no-toc">[LONGSTATUS] [DATE]</h2>
-<dl>
-  <dt>This version:
-    <dd><a href="[VERSION]">[VERSION]</a>
-
-  <dt>Latest version:
-    <dd><a href="http://www.w3.org/TR/css-overflow-3/">http://www.w3.org/TR/css-overflow-3/</a>
-
-  <dt>Editor's draft:
-    <dd><a href="http://dev.w3.org/csswg/[SHORTNAME]/">http://dev.w3.org/csswg/[SHORTNAME]/</a>
-    (<a href="https://dvcs.w3.org/hg/csswg/log/tip/css-overflow/Overview.src.html">change log</a>,
-    <a href="https://dvcs.w3.org/hg/csswg/log/tip/css3-overflow/Overview.src.html">older change log</a>)
-
-  <dt>Previous version:
-    <dd><a href="http://www.w3.org/TR/2013/WD-css-overflow-3-20130418/">http://www.w3.org/TR/2013/WD-css-overflow-3-20130418/</a>
-
-  <dt>Editors:
-    <dd class="h-card vcard">
-      <a class="p-name fn u-url url" rel="author"
-         href="http://dbaron.org/">L. David Baron</a>,
-      <a class="p-org org" href="http://www.mozilla.org/">Mozilla</a>
-
-  <dt>Issue Tracking:</dt>
-    <dd>Maintained in document (only editor's draft is current)
-
-  <dt>Feedback:</dt>
-    <dd><a href="mailto:www-style@w3.org?subject=%5Bcss-overflow%5D%20feedback"
-         >www-style@w3.org</a> 
-         with subject line &ldquo;<kbd>[css-overflow] 
-         <var>&hellip; message topic &hellip;</var></kbd>&rdquo;
-         (<a rel="discussion" href="http://lists.w3.org/Archives/Public/www-style/"
-           >archives</a>)
-
-  <dt>Test suite:
-    <dd>none yet
-</dl>
-
-<!--copyright-->
-
-<hr title="Separator for header">
-</div>
-
-<h2 class="no-num no-toc" id="abstract">Abstract</h2>
 
 	<p>
-		<a href="http://www.w3.org/TR/CSS/">CSS</a> is
-		a language for describing
-		the rendering of structured documents (such as HTML and XML)
-		on screen, on paper, in speech, etc.
-		This module contains the features of CSS
-		relating to new mechanisms of overflow handling in visual media (e.g., screen or paper).
-		In interactive media,
-		it describes features that allow the overflow
-		from a fixed size container
-		to be handled by pagination (displaying one page at a time).
-		It also describes features, applying to all visual media,
-		that allow the contents of an element
-		to be spread across multiple fragments,
-		allowing the contents to flow across multiple regions
-		or to have different styles for different fragments.
 	</p>
 
-<h2 class="no-num no-toc" id="status">Status of this document</h2>
-
-<!--status-->
-
-<p>The following features are at risk: &hellip;
-
-<h2 class="no-num no-toc" id="contents">
-Table of contents</h2>
-
-<!--toc-->
-
 <h2 id="intro">
 Introduction</h2>
 
 	<p>
 		In CSS Level 1 [[CSS1]], placing more content than would fit
 		inside an element with a specified size
 		was generally an authoring error.
 		Doing so caused the content to extend
@@ -272,48 +211,48 @@ Introduction</h2>
 		when ''transform-style: preserve-3d'' [[CSS3-TRANSFORMS]] is used on
 		some of the children, their descendants with
 		''transform-style: preserve-3d'' must also be examined.
 	</p>
 
 <h3 id="ink-overflow">Ink overflow</h3>
 
 	<p>
-		The <dfn>ink overflow</dfn> of a box
+		The <dfn id="ink-overflow0">ink overflow</dfn> of a box
 		is the part of that box and its contents that
 		creates a visual effect outside of
 		the box's border box.
 	</p>
 
 	<p>
 		Since some effects in CSS (for example, the blurs in
 		'text-shadow' [[CSS3TEXT]] and 'box-shadow' [[CSS3BG]])
 		do not define what visual extent they cover, the extent
-		of the <i>ink overflow</i> is undefined.
+		of the <a>ink overflow</a> is undefined.
 	</p>
 
 	<p class="issue">
 		Should we try to define it at all and just leave pieces undefined?
 	</p>
 
 	<p>
 		The <dfn>ink overflow region</dfn> is the non-rectangular region
-		occupied by the <i>ink overflow</i>, and the
+		occupied by the <a>ink overflow</a>, and the
 		<dfn>ink overflow rectangle</dfn> is
 		the minimal rectangle whose axis is aligned to the box's axes
-		and contains the <i>ink overflow region</i>.
-		Note that the <i>ink overflow rectangle</i> is a rectangle
+		and contains the <a>ink overflow region</a>.
+		Note that the <a>ink overflow rectangle</a> is a rectangle
 		in the box's coordinate system, but might be non-rectangular
 		in other coordinate systems due to transforms [[CSS3-TRANSFORMS]].
 	</p>
 
 <h3 id="scrollable-overflow">Scrollable overflow</h3>
 
 	<p>
-		The <dfn>scrollable overflow</dfn> of a box is the
+		The <dfn id="scrollable-overflow0">scrollable overflow</dfn> of a box is the
 		set of things extending outside of that box's padding edge
 		for which a scrolling mechanism needs to be provided.
 	</p>
 
 	<p class="issue">
 		The following definition should be rewritten to use
 		the concept of <a href="http://dev.w3.org/csswg/css-transforms/#3d-rendering-context">3D rendering context</a> [[!CSS3-TRANSFORMS]]
 		and related terms,
@@ -332,41 +271,41 @@ Introduction</h2>
 			A child box B of a containing block C is a 3d-preserving
 			child if it has ''transform-style: preserve-3d''
 			and the user-agent is not required to flatten it
 			based on the <a href="http://www.w3.org/TR/css3-transforms/#transform-style-property">requirements</a> in [[!CSS3-TRANSFORMS]].
 		</dt>
 		<dt><dfn>non-3d-preserving child</dfn></dt>
 		<dd>
 			A child C of a box P is a non-3d-preserving-child if
-			it is not a <i>3d-preserving child</i>.
+			it is not a <a>3d-preserving child</a>.
 		</dd>
 		<dt><dfn>3d-preserving descendant</dfn></dt>
 		<dd>
 			Box D is a 3d-preserving descendant of box A if A is
 			an ancestor of D, and D and all of the boxes (if any)
 			in the containing block chain from D to A
-			are <i>3d-preserving child</i> boxes.
+			are <a>3d-preserving child</a> boxes.
 		</dd>
 	</dl>
 
 	<p>The scrollable overflow of a box is the union of the following things,
 	all adjusted for transforms <span class="issue">undefined concept!</span> into the box's coordinate space:</p>
 
 	<ul>
 		<li>
-			for the box and all of its <i>3d-preserving descendant</i> boxes:
+			for the box and all of its <a>3d-preserving descendant</a> boxes:
 			<ul>
-				<li>the box's own padding edge (for the box itself) or border edge (for <i>3d-preserving descendant</i> boxes)</li>
+				<li>the box's own padding edge (for the box itself) or border edge (for <a>3d-preserving descendant</a> boxes)</li>
 				<li>the bounds <span class="issue">undefined term!</span> of any text directly in the box</li>
 				<li><span class="issue">MORE HERE!</span>
 			</ul>
 		<li>
-			for all the <i>non-3d-preserving child</i> boxes of the
-			box and its <i>3d-preserving descendant</i> boxes,
+			for all the <a>non-3d-preserving child</a> boxes of the
+			box and its <a>3d-preserving descendant</a> boxes,
 			the scrollable overflow of the box
 		</li>
 	</ul>
 
 	<p class="issue">
 		I wrote this definition off the top of my head,
 		so it can't possibly be right.
 		It's missing tons of pieces!
@@ -375,21 +314,21 @@ Introduction</h2>
 	<p class="issue">
 		The handling of preserve-3d subtrees here is probably wrong;
 		the elements should probably count
 		only towards the overflow of the element that flattens them.
 	</p>
 
 	<p>
 		The <dfn>scrollable overflow region</dfn> is the non-rectangular region
-		occupied by the <i>scrollable overflow</i>, and the
+		occupied by the <a>scrollable overflow</a>, and the
 		<dfn>scrollable overflow rectangle</dfn> is
 		the minimal rectangle whose axis is aligned to the box's axes
-		and contains the <i>scrollable overflow region</i>.
-		Note that the <i>scrollable overflow rectangle</i> is a rectangle
+		and contains the <a>scrollable overflow region</a>.
+		Note that the <a>scrollable overflow rectangle</a> is a rectangle
 		in the box's coordinate system, but might be non-rectangular
 		in other coordinate systems due to transforms [[CSS3-TRANSFORMS]].
 	</p>
 
 <h3 id="border-box-overflow">Border box overflow</h3>
 
 	<p class="issue">
 		This concept has been proposed for some uses, such as for
@@ -406,21 +345,21 @@ Introduction</h2>
 
 	<p class="issue">
 		If needed, define more formally, as for scrollable overflow above.
 		(Maybe even share the definitions in an appropriate way!)
 	</p>
 
 	<p>
 		The <dfn>border-box overflow region</dfn> is the non-rectangular region
-		occupied by the <i>border-box overflow</i>, and the
+		occupied by the <a>border-box overflow</a>, and the
 		<dfn>border-box overflow rectangle</dfn> is
 		the minimal rectangle whose axis is aligned to the box's axes
-		and contains the <i>border-box overflow region</i>.
-		Note that the <i>border-box overflow rectangle</i> is a rectangle
+		and contains the <a>border-box overflow region</a>.
+		Note that the <a>border-box overflow rectangle</a> is a rectangle
 		in the box's coordinate system, but might be non-rectangular
 		in other coordinate systems due to transforms [[CSS3-TRANSFORMS]].
 	</p>
 
 <h2 id="overflow-properties">Overflow properties</h2>
 
 	<p>
 		The ''overflow-x'' property specifies
@@ -431,17 +370,17 @@ Introduction</h2>
 		(i.e., overflow from the top and bottom sides of the box) 
 	</p>
 
 	<table class=propdef>
 		<tr>
 			<th>Name:
 			<td><dfn>overflow-x</dfn>, <dfn>overflow-y</dfn>
 		<tr>
-			<th><a href="#values">Value</a>:
+			<th>Value:
 			<td>visible | hidden | scroll | auto | paged-x | paged-y | paged-x-controls | paged-y-controls | fragments
 		<tr>
 			<th>Initial:
 			<td>visible
 		<tr>
 			<th>Applies to:
 			<td>block containers [[!CSS21]], flex containers [[!CSS3-FLEXBOX]], and grid containers [[!CSS3-GRID-LAYOUT]]
 		<tr>
@@ -470,17 +409,17 @@ Introduction</h2>
 		to the value specified for 'overflow'.
 	</p>
 
 	<table class=propdef>
 		<tr>
 			<th>Name:
 			<td><dfn>overflow</dfn>
 		<tr>
-			<th><a href="#values">Value</a>:
+			<th>Value:
 			<td>visible | hidden | scroll | auto | paged-x | paged-y | paged-x-controls | paged-y-controls | fragments
 		<tr>
 			<th>Initial:
 			<td>see individual properties
 		<tr>
 			<th>Applies to:
 			<td>block containers [[!CSS21]], flex containers [[!CSS3-FLEXBOX]], and grid containers [[!CSS3-GRID-LAYOUT]]
 		<tr>
@@ -500,17 +439,17 @@ Introduction</h2>
 			<td>no
 		<tr>
 			<th>Canonical order:
 			<td><abbr title="follows order of property value definition">per grammar</abbr>
 	</table>
 
 	<p>The values of these properties are:</p>
 
-	<dl>
+	<dl dfn-for="overflow" dfn-type="value">
 		<dt><dfn>visible</dfn>
 		<dd>
 			There is no special handling of overflow, that is, it
 			may be rendered outside the block container.
 		</dd>
 		<dt><dfn>hidden</dfn>
 		<dt><dfn>scroll</dfn>
 		<dt><dfn>auto</dfn>
@@ -535,63 +474,63 @@ Introduction</h2>
 	<div id="overflow-computed-values">
 		<p>The computed values of 'overflow-x' and 'overflow-y'
 		are determined from the cascaded values [[!CSS3CASCADE]]
 		based on the following rules:</p>
 
 		<ol>
 			<li>
 				If one or both of the cascaded values are
-				<i>fragmenting values</i>, then:
+				<a>fragmenting values</a>, then:
 				<ol>
 					<li>
 						If one of the cascaded values is one of the
-						<i>fragmenting values</i>
+						<a>fragmenting values</a>
 						and the other is not,
 						then the computed values are
 						the same as the cascaded values.
 					</li>
 					<li>
-						If both of the cascaded values are <i>fragmenting values</i>, then:
+						If both of the cascaded values are <a>fragmenting values</a>, then:
 						<ol>
 							<li>
 								for horizontal writing mode [[!CSS3-WRITING-MODES]],
 								the computed value for ''overflow-y'' is the cascaded value
-								and the computed value for ''overflow-x'' is ''hidden'', or
+								and the computed value for ''overflow-x'' is ''overflow/hidden'', or
 							</li>
 							<li>
 								for vertical writing mode [[!CSS3-WRITING-MODES]],
 								the computed value for ''overflow-x'' is the cascaded value
-								and the computed value for ''overflow-y'' is ''hidden''.
+								and the computed value for ''overflow-y'' is ''overflow/hidden''.
 							</li>
 						</ol>
 					</li>
 				</ol>
 			</li>
 			<li>
 				Otherwise, if one cascaded values is
-				one of the <i>scrolling values</i>
-				and the other is ''visible'',
+				one of the <a>scrolling values</a>
+				and the other is ''overflow/visible'',
 				then computed values are the cascaded values
-				with ''visible'' changed to ''auto''.
+				with ''overflow/visible'' changed to ''overflow/auto''.
 			</li>
 			<li>
 				Otherwise, the computed values are as specified.
 			</li>
 		</ol>
 	</div>
 
 	<p class="issue">
 		Are all 4 of the ''paged-*'' values really needed?
 	</p>
 
 	<p>
-		When the <i>fragmenting values</i> are used,
+		When the <a>fragmenting values</a> are used,
 		the overflow from the fragments themselves
-		treats the fragmenting value as ''hidden''.
+		treats the fragmenting value as ''overflow/hidden''.
 		<span class="issue">Is this the right behavior?</span>
 		<span class="issue">Give example.</span>
 	</p>
 
 	<p class="issue">
 		[[CSS3-MARQUEE]] describes an 'overflow-style' property,
 		but it has not picked up implementation experience
 		that the working group is aware of.
@@ -649,48 +588,48 @@ rather than just one page at once?</p>
 	</p>
 
 	<p>
 		When the computed value of 'overflow' for an element is ''fragments'',
 		and implementations would otherwise have created a box for the element,
 		then implementations must create a sequence of <dfn>fragment box</dfn>es
 		for that element.
 		(It is possible for an element with ''overflow: fragments''
-		to generate only one <i>fragment box</i>.
+		to generate only one <a>fragment box</a>.
 		However, if an element's computed 'overflow' is not ''fragments'',
-		then its box is not a <i>fragment box</i>.)
-		Every <i>fragment box</i> is a fragmentation container,
+		then its box is not a <a>fragment box</a>.)
+		Every <a>fragment box</a> is a fragmentation container,
 		and any overflow
 		that would cause that fragmentation container to fragment
-		causes another <i>fragment box</i> created as a next sibling
+		causes another <a>fragment box</a> created as a next sibling
 		of the previous one.
 		<span class="issue">Or is it as though it's a next sibling of
 		the element?  Need to figure out exactly how this interacts with
 		other box-level fixup.</span>
-		Additionally, if the <i>fragment box</i> is also
+		Additionally, if the <a>fragment box</a> is also
 		a multi-column box (as defined in [[!CSS3COL]]
 		<span class="issue">though it defines <i>multi-column element</i></span>)
-		any content that would lead to the creation of <i>overflow columns</i> [[!CSS3COL]]
+		any content that would lead to the creation of <a>overflow columns</a> [[!CSS3COL]]
 		instead is flown into an additional fragment box.
 		However, fragment boxes may themselves be broken
 		(due to fragmentation in a fragmentation context outside of them,
 		such as pages, columns, or other fragment boxes);
 		such breaking leads to fragments of the same fragment box
 		rather than multiple fragment boxes.
 		(This matters because fragment boxes may be styled by their index;
 		such breaking leads to multiple fragments of a fragment box
 		with a single index.
 		This design choice is so that
 		breaking a fragment box across pages does not break
 		the association of indices to particular pieces of content.)
 		<span class="issue">Should a forced break that breaks to
 		an outer fragmentation context cause a new fragment of a single
 		fragment box or a new fragment box?</span>
 		<span class="issue">Should we find a term other than
-		<i>fragment box</i> here to make this a little less confusing?</span>
+		<a>fragment box</a> here to make this a little less confusing?</span>
 	</p>
 
 	<p class="issue">
 		What if we want to be able to style the pieces of an element
 		split within another type of fragmentation context?
 		These rules prevent ever using ''::nth-fragment()'' for that,
 		despite that the name seems the most logical name for such a feature.
 	</p>
@@ -758,22 +697,22 @@ rather than just one page at once?</p>
 	</p>
 
 <h3 id="fragment-styling">Fragment styling</h3>
 
 <h4 id="fragment-pseudo-element">The ::nth-fragment() pseudo-element</h4>
 
 	<p>
 		The ::nth-fragment() pseudo-element is a pseudo-element
-		that describes some of the <i>fragment box</i>es generated by an element.
+		that describes some of the <a>fragment box</a>es generated by an element.
 		The argument to the pseudo-element takes the same syntax
 		as the argument to the :nth-child() pseudo-class
 		defined in [[!SELECT]], and has the same meaning
 		except that the number is relative to
-		<i>fragment box</i>es generated by the element
+		<a>fragment box</a>es generated by the element
 		instead of siblings of the element.
 	</p>
 
 	<p class="note">
 		Selectors that allow addressing fragments
 		by counting from the end rather than the start
 		are intentionally not provided.
 		Such selectors would interfere with determining
@@ -794,30 +733,30 @@ rather than just one page at once?</p>
 		or also to paginated overflow?
 		(If it applies,
 		then stricter property restrictions would be needed
 		for paginated overflow.)
 	</p>
 
 	<p>
 		In the absence of rules with ''::nth-fragment()'' pseudo-elements,
-		the computed style for each <i>fragment box</i>
+		the computed style for each <a>fragment box</a>
 		is the computed style for the element
-		for which the <i>fragment box</i> was created.
-		However, the style for a <i>fragment box</i> is also influenced
-		by rules whose selector's <i>subject</i> [[!SELECT]]
+		for which the <a>fragment box</a> was created.
+		However, the style for a <a>fragment box</a> is also influenced
+		by rules whose selector's <a>subject</a> [[!SELECT]]
 		has an ''::nth-fragment()'' pseudo-element,
-		if the 1-based number of the <i>fragment box</i> matches
+		if the 1-based number of the <a>fragment box</a> matches
 		that ''::nth-fragment()'' pseudo-element
 		and the selector (excluding the ''::nth-fragment()'' pseudo-element)
 		matches the element generating the fragments.
 	</p>
 
 	<p>
-		When determining the style of the <i>fragment box</i>,
+		When determining the style of the <a>fragment box</a>,
 		these rules that match the fragment pseudo-element
 		cascade together with the rules that match the element,
 		with the fragment pseudo-element adding the specificity
 		of a pseudo-class to the specificity calculation.
 		<span class="issue">Does this need to be specified in
 		the cascading module as well?</span>
 	</p>
 
@@ -849,72 +788,73 @@ rather than just one page at once?</p>
 			<div class="bouncy-columns-demo two">intended the<br>text to fill two<br>columns.  But<br>if it happens to<br>fill three<br>columns, the<br>third column is<br>still created.  It</div>
 			<div class="bouncy-columns-demo">just doesn't<br>have any<br>fragment-specific<br>styling because<br>the author<br>didn't give it<br>any.</div>
 		</td></tr></table>
 	</div>
 
 	<p>
 		Styling an ''::nth-fragment()'' pseudo-element with the 'overflow'
 		property does take effect;
-		if a <i>fragment box</i> has a
+		if a <a>fragment box</a> has a
 		computed value of 'overflow' other than ''fragments''
 		then that fragment box is the last fragment.
 		However, overriding 'overflow' on the first fragment
-		does not cause the <i>fragment box</i> not to exist;
+		does not cause the <a>fragment box</a> not to exist;
 		whether there are fragment boxes at all is determined by
 		the computed value of overflow for the element.
 		<span class="issue">Need to reword this to refer to the
 		appropriate choice of ''overflow-x'' or ''overflow-y'',
 		and then point to rule about the handling of the other one
 		of ''overflow-x'' or ''overflow-y''.</span>
 	</p>
 
 	<p>
 		Styling an ''::nth-fragment()'' pseudo-element with the 'content'
 		property has no effect;
 		the computed value of 'content' for the fragment box
 		remains the same as the computed value of content for the element.
 	</p>
 
 	<p>
-		Specifying ''display: none'' for a <i>fragment box</i> causes
+		Specifying ''display: none'' for a <a>fragment box</a> causes
 		the fragment box with that index not to be generated.
 		However, in terms of the indices
 		used for matching ''::nth-fragment()'' pseudo-elements
 		of later fragment boxes,
 		it still counts as though it was generated.
 		However, since it is not generated, it does not contain any content.
 	</p>
 
 	<p>
 		Specifying other values of 'display', 'position',
 		or 'float' is permitted, but is not allowed to change
 		the computed value of 'display-inside'.
 		(Since 'overflow', 'overflow-x', and 'overflow-y' only
 		apply to block containers, flex containers, and grid containers
 		the computed value of 'display-inside' is always
-		''block'', ''flex'' or ''grid''.
+		''display-inside/block'', ''display-inside/flex'', or
+		''display-inside/grid''.
 		<span class="issue">Need to specify exactly how this works,
 		but it depends on
 		having 'display-inside' and 'display-outside' specified.</span>
 	</p>
 
 	<p>
 		To match the model for other pseudo-elements
 		where the pseudo-elements live inside their corresponding element,
 		declarations in ''::nth-fragment()'' pseudo-elements override
 		declarations in rules without the pseudo-element.
 		The relative priority within such declarations is determined
 		by normal cascading order (see [[!CSS21]]).
 	</p>
 
 	<p>
 		Styles specified on ''::nth-fragment()'' pseudo-elements
-		do affect inheritance to content within the <i>fragment box</i>.
-		In other words, the content within the <i>fragment box</i> must
+		do affect inheritance to content within the <a>fragment box</a>.
+		In other words, the content within the <a>fragment box</a> must
 		inherit from the fragment box's style (i.e., the pseudo-element style)
 		rather than directly from the element.
 		This means that elements split between fragment boxes may
 		have different styles for different parts of the element.
 	</p>
 
 	<p class="issue">
 		This inheritance rule allows specifying styles indirectly
@@ -957,17 +897,17 @@ rather than just one page at once?</p>
 		Should this apply to fragment overflow only,
 		or also to paginated overflow,
 		or even to pagination across pages?
 	</p>
 
 	<p>
 		The ''::nth-fragment()'' pseudo-element
 		can also be used to style
-		content inside of a <i>fragment box</i>.
+		content inside of a <a>fragment box</a>.
 		Unlike the ''::first-line'' and ''::first-letter'' pseudo-elements,
 		the ''::nth-fragment()'' pseudo-element can be applied
 		to parts of the selector other than the subject:
 		in particular, it can match ancestors of the subject.
 		However, the only CSS properties applied
 		by rules with such selectors
 		are those that apply
 		to the ''::first-letter'' pseudo-element.
@@ -990,17 +930,17 @@ rather than just one page at once?</p>
 			that fragment (or pseudo-element thereof)
 			had those ''::nth-fragment()'' pseudo-elements been removed,
 			with a particular association between
 			each sequence of simple selectors and the element it matched,
 			and
 		</li>
 		<li>
 			for each removed ''::nth-fragment()'' pseudo-element,
-			the fragment lives within a <i>fragment box</i>
+			the fragment lives within a <a>fragment box</a>
 			of the element associated in that association
 			with the selector that the pseudo-element was attached to,
 			and whose index matches the pseudo-element.
 		</li>
 	</ol>
 
 	<div class="example">
 		<table class="source-demo-pair"><tr><td><pre>&lt;!DOCTYPE HTML&gt;
@@ -1059,17 +999,17 @@ rather than just one page at once?</p>
 		as long as those lines are in the same block formatting context.
 	</p>
 
 	<table class=propdef>
 		<tr>
 			<th>Name:
 			<td><dfn>max-lines</dfn>
 		<tr>
-			<th><a href="#values">Value</a>:
+			<th>Value:
 			<td>none | &lt;integer&gt;
 		<tr>
 			<th>Initial:
 			<td>none
 		<tr>
 			<th>Applies to:
 			<td>fragment boxes
 		<tr>
@@ -1164,219 +1104,16 @@ to pagination?</p>
 		in static media (such as print).
 		Current implementation behavior is quite poor and
 		produces unexpected results when authors have not considered
 		what will happen when
 		the content they produce for interactive media
 		is printed.
 	</p>
 
-<h2 id="conformance">
-Conformance</h2>
-
-<h3 id="placement">
-Module interactions</h3>
-
-  <p>This module extends the 'overflow'
-  feature defined in [[CSS21]] section 11.1.1.  It defines additional
-  overflow handling mechanisms that implementations must implement as
-  described in this module in order to conform to this module.</p>
-
-  <p>No properties in this module apply to the <code>::first-line</code> or
-  <code>::first-letter</code> pseudo-elements.</p>
-
-<h3 id="values">
-Values</h3>
-
-  <p>This specification follows the
-  <a href="http://www.w3.org/TR/CSS21/about.html#property-defs">CSS property
-  definition conventions</a> from [[!CSS21]]. Value types not defined in
-  this specification are defined in CSS Level 2 Revision 1 [[!CSS21]].
-  Other CSS modules may expand the definitions of these value types: for
-  example [[CSS3COLOR]], when combined with this module, expands the
-  definition of the &lt;color&gt; value type as used in this specification.</p>
-  
-  <p>In addition to the property-specific values listed in their definitions,
-  all properties defined in this specification also accept the
-  <a href="http://www.w3.org/TR/CSS21/cascade.html#value-def-inherit">inherit</a>
-  keyword as their property value. For readability it has not been repeated
-  explicitly.
-
-
-<h3 id="conventions">
-Document conventions</h3>
-
-  <p>Conformance requirements are expressed with a combination of
-  descriptive assertions and RFC 2119 terminology. The key words “MUST”,
-  “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”, “SHOULD NOT”,
-  “RECOMMENDED”, “MAY”, and “OPTIONAL” in the normative parts of this
-  document are to be interpreted as described in RFC 2119.
-  However, for readability, these words do not appear in all uppercase
-  letters in this specification.
-  
-  <p>All of the text of this specification is normative except sections
-  explicitly marked as non-normative, examples, and notes. [[!RFC2119]]</p>
-  
-  <p>Examples in this specification are introduced with the words “for example”
-  or are set apart from the normative text with <code>class="example"</code>,
-  like this:
-  
-  <div class="example">
-    <p>This is an example of an informative example.</p>
-  </div>
-  
-  <p>Informative notes begin with the word “Note” and are set apart from the
-  normative text with <code>class="note"</code>, like this:
-  
-  <p class="note">Note, this is an informative note.</p>
-
-<h3 id="conformance-classes">
-Conformance classes</h3>
-
-  <p>Conformance to CSS Overflow Module Level 3
-  is defined for three conformance classes:
-  <dl>
-    <dt><dfn title="style sheet!!as conformance class">style sheet</dfn>
-      <dd>A <a href="http://www.w3.org/TR/CSS21/conform.html#style-sheet">CSS
-      style sheet</a>.
-    <dt><dfn>renderer</dfn></dt>
-      <dd>A <a href="http://www.w3.org/TR/CSS21/conform.html#user-agent">UA</a>
-      that interprets the semantics of a style sheet and renders
-      documents that use them.
-    <dt><dfn id="authoring-tool">authoring tool</dfn></dt>
-      <dd>A <a href="http://www.w3.org/TR/CSS21/conform.html#user-agent">UA</a>
-      that writes a style sheet.
-  </dl>
-  
-  <p>A style sheet is conformant to CSS Overflow Module Level 3
-  if all of its statements that use syntax defined in this module are valid
-  according to the generic CSS grammar and the individual grammars of each
-  feature defined in this module.
-  
-  <p>A renderer is conformant to CSS Overflow Module Level 3
-  if, in addition to interpreting the style sheet as defined by the
-  appropriate specifications, it supports all the features defined
-  by CSS Overflow Module Level 3 by parsing them correctly
-  and rendering the document accordingly. However, the inability of a
-  UA to correctly render a document due to limitations of the device
-  does not make the UA non-conformant. (For example, a UA is not
-  required to render color on a monochrome monitor.)
-  
-  <p>An authoring tool is conformant to CSS Overflow Module Level 3
-  if it writes style sheets that are syntactically correct according to the
-  generic CSS grammar and the individual grammars of each feature in
-  this module, and meet all other conformance requirements of style sheets
-  as described in this module.
-
-<h3 id="partial">
-Partial implementations</h3>
-
-  <p>So that authors can exploit the forward-compatible parsing rules to
-  assign fallback values, CSS renderers <strong>must</strong>
-  treat as invalid (and <a href="http://www.w3.org/TR/CSS21/conform.html#ignore">ignore
-  as appropriate</a>) any at-rules, properties, property values, keywords,
-  and other syntactic constructs for which they have no usable level of
-  support. In particular, user agents <strong>must not</strong> selectively
-  ignore unsupported component values and honor supported values in a single
-  multi-value property declaration: if any value is considered invalid
-  (as unsupported values must be), CSS requires that the entire declaration
-  be ignored.</p>
-  
-<h3 id="experimental">
-Experimental implementations</h3>
-
-  <p>To avoid clashes with future CSS features, the CSS2.1 specification
-  reserves a <a href="http://www.w3.org/TR/CSS21/syndata.html#vendor-keywords">prefixed
-  syntax</a> for proprietary and experimental extensions to CSS.
-  
-  <p>Prior to a specification reaching the Candidate Recommendation stage
-  in the W3C process, all implementations of a CSS feature are considered
-  experimental. The CSS Working Group recommends that implementations
-  use a vendor-prefixed syntax for such features, including those in
-  W3C Working Drafts. This avoids incompatibilities with future changes
-  in the draft.
-  </p>
- 
-<h3 id="testing">
-Non-experimental implementations</h3>
-
-  <p>Once a specification reaches the Candidate Recommendation stage,
-  non-experimental implementations are possible, and implementors should
-  release an unprefixed implementation of any CR-level feature they
-  can demonstrate to be correctly implemented according to spec.
-  
-  <p>To establish and maintain the interoperability of CSS across
-  implementations, the CSS Working Group requests that non-experimental
-  CSS renderers submit an implementation report (and, if necessary, the
-  testcases used for that implementation report) to the W3C before
-  releasing an unprefixed implementation of any CSS features. Testcases
-  submitted to W3C are subject to review and correction by the CSS
-  Working Group.
-  
-  <p>Further information on submitting testcases and implementation reports
-  can be found from on the CSS Working Group's website at
-  <a href="http://www.w3.org/Style/CSS/Test/">http://www.w3.org/Style/CSS/Test/</a>.
-  Questions should be directed to the
-  <a href="http://lists.w3.org/Archives/Public/public-css-testsuite">public-css-testsuite@w3.org</a>
-  mailing list.
-
-<h3 id="cr-exit-criteria">
-CR exit criteria</h3>
-
-  <p class=issue>[Change or remove the following CR exit criteria if
-  the spec is not a module, but, e.g., a Note or a profile. This text was <a
-  href="http://www.w3.org/Style/CSS/Tracker/actions/44"> decided on 2008-06-04.</a>]</p>
-
-  <p>
-  For this specification to be advanced to Proposed Recommendation,
-  there must be at least two independent, interoperable implementations
-  of each feature. Each feature may be implemented by a different set of
-  products, there is no requirement that all features be implemented by
-  a single product. For the purposes of this criterion, we define the
-  following terms:
-  
-  <dl>
-    <dt>independent <dd>each implementation must be developed by a
-    different party and cannot share, reuse, or derive from code
-    used by another qualifying implementation. Sections of code that
-    have no bearing on the implementation of this specification are
-    exempt from this requirement.
-  
-    <dt>interoperable <dd>passing the respective test case(s) in the
-    official CSS test suite, or, if the implementation is not a Web
-    browser, an equivalent test. Every relevant test in the test
-    suite should have an equivalent test created if such a user
-    agent (UA) is to be used to claim interoperability. In addition
-    if such a UA is to be used to claim interoperability, then there
-    must one or more additional UAs which can also pass those
-    equivalent tests in the same way for the purpose of
-    interoperability. The equivalent tests must be made publicly
-    available for the purposes of peer review.
-  
-    <dt>implementation <dd>a user agent which:
-  
-    <ol class=inline>
-      <li>implements the specification.
-  
-      <li>is available to the general public. The implementation may
-      be a shipping product or other publicly available version
-      (i.e., beta version, preview release, or “nightly build”). 
-      Non-shipping product releases must have implemented the
-      feature(s) for a period of at least one month in order to
-      demonstrate stability.
-  
-      <li>is not experimental (i.e., a version specifically designed
-      to pass the test suite and is not intended for normal usage
-      going forward).
-    </ol>
-  </dl>
-  
-  <p>The specification will remain Candidate Recommendation for at least
-  six months.
-
 <h2 class=no-num id="acknowledgments">
 Acknowledgments</h2>
 
 	<p>
 		Thanks especially to the feedback from
 		Rossen Atanassov,
 		Bert Bos,
 		Tantek Çelik,
@@ -1388,52 +1125,8 @@ Acknowledgments</h2>
 		Peter Linss,
 		Robert O'Callahan,
 		Florian Rivoal,
 		Alan Stearns,
 		Steve Zilles,
 		and all the rest of the
 		<a href="http://lists.w3.org/Archives/Public/www-style/">www-style</a> community.
 	</p>
-
-<h2 class=no-num id="references">
-References</h2>
-
-<h3 class="no-num" id="normative-references">
-Normative references</h3>
-<!--normative-->
-
-<h3 class="no-num" id="other-references">
-Other references</h3>
-<!--informative-->
-
-<h2 class="no-num" id="index">
-Index</h2>
-<!--index-->
-
-<h2 class="no-num" id="property-index">
-Property index</h2>
-<!-- properties -->
-
-</body>
-</html>
-<!-- Keep this comment at the end of the file
-Local variables:
-mode: sgml
-sgml-declaration:"~/SGML/HTML4.decl"
-sgml-default-doctype-name:"html"
-sgml-minimize-attributes:t
-sgml-nofill-elements:("pre" "style" "br")
-sgml-live-element-indicator:t
-sgml-omittag:nil
-sgml-shorttag:nil
-sgml-namecase-general:t
-sgml-general-insert-case:lower
-sgml-always-quote-attributes:t
-sgml-indent-step:nil
-sgml-indent-data:t
-sgml-parent-document:nil
-sgml-exposed-tags:nil
-sgml-local-catalogs:nil
-sgml-local-ecat-files:nil
-End:
--->
- 
